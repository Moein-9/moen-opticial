
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://loxnmnlszxxjrpkfybwm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxveG5tbmxzenh4anJwa2Z5YndtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM0NDgzMTEsImV4cCI6MjA1OTAyNDMxMX0.Xs_tA96EugjVxuC4nV966cLBK9xb7NBqfqv3q3oA6I0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: {
      'x-application-name': 'Moen Optical'
    }
  }
});

// Helper function to handle Supabase errors
export const handleSupabaseError = (error: any): string => {
  console.error("Supabase error:", error);
  
  if (typeof error === 'object' && error !== null) {
    // Return the error message if available
    if (error.message) return error.message;
    // Check for Supabase specific error format
    if (error.error_description) return error.error_description;
  }
  
  // Fallback generic error
  return "An unexpected error occurred. Please try again.";
};

// Helper to generate unique combination IDs for lens pricing
export const generateCombinationId = (lensTypeId: string, coatingId: string, thicknessId: string): string => {
  return `${lensTypeId}_${coatingId}_${thicknessId}`;
};
